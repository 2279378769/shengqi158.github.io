<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xxlegend</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xxlegend.com/"/>
  <updated>2017-05-01T06:13:51.074Z</updated>
  <id>http://xxlegend.com/</id>
  
  <author>
    <name>廖新喜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fastjson 远程反序列化poc的构造和分析</title>
    <link href="http://xxlegend.com/2017/04/29/title-%20fastjson%20%E8%BF%9C%E7%A8%8B%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96poc%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E5%88%86%E6%9E%90/"/>
    <id>http://xxlegend.com/2017/04/29/title- fastjson 远程反序列化poc的构造和分析/</id>
    <published>2017-04-29T14:27:22.490Z</published>
    <updated>2017-05-01T06:13:51.074Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;fastjson 反序列化 poc 1.2.24&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1 背景&quot;&gt;&lt;/a&gt;1 背景&lt;/h1&gt;&lt;p&gt;fastjson是一个java编写的高性能功能非常
    
    </summary>
    
      <category term="java" scheme="http://xxlegend.com/categories/java/"/>
    
    
      <category term="fastjson" scheme="http://xxlegend.com/tags/fastjson/"/>
    
      <category term="反序列化" scheme="http://xxlegend.com/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="poc" scheme="http://xxlegend.com/tags/poc/"/>
    
      <category term="java" scheme="http://xxlegend.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Python安全编码之预防LDAP注入</title>
    <link href="http://xxlegend.com/2016/12/01/Python%E5%AE%89%E5%85%A8%E7%BC%96%E7%A0%81%E4%B9%8B%E9%A2%84%E9%98%B2LDAP%E6%B3%A8%E5%85%A5/"/>
    <id>http://xxlegend.com/2016/12/01/Python安全编码之预防LDAP注入/</id>
    <published>2016-12-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:37:01.284Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-LDAP简介&quot;&gt;&lt;a href=&quot;#1-LDAP简介&quot; class=&quot;headerlink&quot; title=&quot;1 LDAP简介&quot;&gt;&lt;/a&gt;1 LDAP简介&lt;/h2&gt;&lt;p&gt;LDAP（Lightweight Directory Access Protocol）轻量级
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="安全编码" scheme="http://xxlegend.com/tags/%E5%AE%89%E5%85%A8%E7%BC%96%E7%A0%81/"/>
    
      <category term="Python" scheme="http://xxlegend.com/tags/Python/"/>
    
      <category term="LDAP注入" scheme="http://xxlegend.com/tags/LDAP%E6%B3%A8%E5%85%A5/"/>
    
      <category term="预防注入" scheme="http://xxlegend.com/tags/%E9%A2%84%E9%98%B2%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>获取用户IP的正确姿势</title>
    <link href="http://xxlegend.com/2016/11/01/%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7IP%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <id>http://xxlegend.com/2016/11/01/获取用户IP的正确姿势/</id>
    <published>2016-11-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:37:41.451Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;如何获取用户的IP，这个需求简直是太常见了，像登录入口，注册入口，投票，日志记录，api接口中判断同一个ip单位时间内的请求数，可是怎么去获取用户的真实IP呢？网上的代码很多，好多人直接拿来就用，却没有想到带来了很大的安全问题。&lt;/p&gt;
&lt;h2 id=&quot;1-代码示例&quot;&gt;&lt;a
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="X-Forward-For" scheme="http://xxlegend.com/tags/X-Forward-For/"/>
    
      <category term="REMOTE_ADDR" scheme="http://xxlegend.com/tags/REMOTE-ADDR/"/>
    
      <category term="用户IP" scheme="http://xxlegend.com/tags/%E7%94%A8%E6%88%B7IP/"/>
    
      <category term="nginx" scheme="http://xxlegend.com/tags/nginx/"/>
    
      <category term="反向代理" scheme="http://xxlegend.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
      <category term="HTTP_X_FORWARDED_FOR" scheme="http://xxlegend.com/tags/HTTP-X-FORWARDED-FOR/"/>
    
  </entry>
  
  <entry>
    <title>Phpwind利用hash长度扩展攻击修改后台密码getshell</title>
    <link href="http://xxlegend.com/2016/08/01/PhpWind%20%E5%88%A9%E7%94%A8hash%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E4%BF%AE%E6%94%B9%E5%90%8E%E5%8F%B0%E5%AF%86%E7%A0%81getshell/"/>
    <id>http://xxlegend.com/2016/08/01/PhpWind 利用hash长度扩展攻击修改后台密码getshell/</id>
    <published>2016-08-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:38:23.847Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;#1 哈希长度扩展攻击&lt;/p&gt;
&lt;p&gt;##1.1 简介&lt;br&gt;哈希长度扩张攻击（hash length attack）是一类针对某些哈希函数可以额外添加一些信息的攻击手段，适用于已经确定哈希值和密钥长度的情况。哈希值基本表示如下H（密钥||消息），即知道了哈希值和密钥的长度
    
    </summary>
    
      <category term="Php" scheme="http://xxlegend.com/categories/Php/"/>
    
    
      <category term="php" scheme="http://xxlegend.com/tags/php/"/>
    
      <category term="hash length attack" scheme="http://xxlegend.com/tags/hash-length-attack/"/>
    
      <category term="hashpump" scheme="http://xxlegend.com/tags/hashpump/"/>
    
      <category term="getshell" scheme="http://xxlegend.com/tags/getshell/"/>
    
      <category term="哈希长度扩展攻击" scheme="http://xxlegend.com/tags/%E5%93%88%E5%B8%8C%E9%95%BF%E5%BA%A6%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>小心浏览器插件窃取你的隐私</title>
    <link href="http://xxlegend.com/2016/05/01/%E5%B0%8F%E5%BF%83%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E7%AA%83%E5%8F%96%E4%BD%A0%E7%9A%84%E9%9A%90%E7%A7%81/"/>
    <id>http://xxlegend.com/2016/05/01/小心浏览器插件窃取你的隐私/</id>
    <published>2016-05-01T07:38:36.000Z</published>
    <updated>2017-05-02T01:51:56.085Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;浏览器插件已经成为了浏览器的必备品，但是市场上的插件也良莠不齐，甚至部分插件切换用户隐私，如浏览器的历史记录。笔者就遇到了这样一个插件，就是著名的手势插件：crxMouse Chrome Gestures，更可气的是已经用了这个插件一年多了。&lt;/p&gt;
&lt;p&gt;#1 简单介绍：
    
    </summary>
    
      <category term="Burpsuite" scheme="http://xxlegend.com/categories/Burpsuite/"/>
    
    
      <category term="浏览器" scheme="http://xxlegend.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="crxMouse Gesture" scheme="http://xxlegend.com/tags/crxMouse-Gesture/"/>
    
      <category term="手势插件" scheme="http://xxlegend.com/tags/%E6%89%8B%E5%8A%BF%E6%8F%92%E4%BB%B6/"/>
    
      <category term="隐私" scheme="http://xxlegend.com/tags/%E9%9A%90%E7%A7%81/"/>
    
  </entry>
  
  <entry>
    <title>基于mezzanine的攻防比赛环境搭建及XXE漏洞构造</title>
    <link href="http://xxlegend.com/2016/04/01/%E5%9F%BA%E4%BA%8Emezzanine%E7%9A%84%E6%94%BB%E9%98%B2%E6%AF%94%E8%B5%9B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8AXXE%E6%BC%8F%E6%B4%9E%E6%9E%84%E9%80%A0/"/>
    <id>http://xxlegend.com/2016/04/01/基于mezzanine的攻防比赛环境搭建及XXE漏洞构造/</id>
    <published>2016-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:44:28.856Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;虚拟部署&quot;&gt;&lt;a href=&quot;#虚拟部署&quot; class=&quot;headerlink&quot; title=&quot;虚拟部署&quot;&gt;&lt;/a&gt;虚拟部署&lt;/h1&gt;&lt;p&gt;virtualenv是python环境配置和切换工具，进入该虚拟环境后，pip安装的软件不影响当前主环境，这样就能很好的安装
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="攻防比赛" scheme="http://xxlegend.com/tags/%E6%94%BB%E9%98%B2%E6%AF%94%E8%B5%9B/"/>
    
      <category term="xxe" scheme="http://xxlegend.com/tags/xxe/"/>
    
      <category term="mezzanine" scheme="http://xxlegend.com/tags/mezzanine/"/>
    
      <category term="virtualenv" scheme="http://xxlegend.com/tags/virtualenv/"/>
    
  </entry>
  
  <entry>
    <title>SlemBunk木马浅析</title>
    <link href="http://xxlegend.com/2016/04/01/SlemBunk%E6%9C%A8%E9%A9%AC%E6%B5%85%E6%9E%90/"/>
    <id>http://xxlegend.com/2016/04/01/SlemBunk木马浅析/</id>
    <published>2016-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:39:15.573Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;SlemBunk最初由FireEye发现，后来其他一些安全公司也相继发现，作者有幸拿到该样本，分析该木马发现其设计精妙绝伦，可在此基础上做进一步演变。该样本伪造成其他一些常用android应用，欺骗用户输入信用卡相关敏感信息，下面我们就一步步分析。&lt;/p&gt;
&lt;p&gt;#1 恶意
    
    </summary>
    
      <category term="木马" scheme="http://xxlegend.com/categories/%E6%9C%A8%E9%A9%AC/"/>
    
    
      <category term="[object Object]" scheme="http://xxlegend.com/tags/object-Object/"/>
    
      <category term="木马浅析" scheme="http://xxlegend.com/tags/%E6%9C%A8%E9%A9%AC%E6%B5%85%E6%9E%90/"/>
    
      <category term="木马分析" scheme="http://xxlegend.com/tags/%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>如何让Burpsuite监听微信公众号</title>
    <link href="http://xxlegend.com/2016/02/01/%E5%A6%82%E4%BD%95%E8%AE%A9Burpsuite%E7%9B%91%E5%90%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    <id>http://xxlegend.com/2016/02/01/如何让Burpsuite监听微信公众号/</id>
    <published>2016-02-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:44:43.397Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-目的&quot;&gt;&lt;a href=&quot;#1-目的&quot; class=&quot;headerlink&quot; title=&quot;1 目的&quot;&gt;&lt;/a&gt;1 目的&lt;/h1&gt;&lt;p&gt;通过burpsuite代理截获微信公众号的https流量包，做一些重放和自动扫描。这个公众号会利用微信的认证体系，认证完之后
    
    </summary>
    
      <category term="Burpsuite" scheme="http://xxlegend.com/categories/Burpsuite/"/>
    
    
      <category term="Burpsuite" scheme="http://xxlegend.com/tags/Burpsuite/"/>
    
      <category term="微信公众号" scheme="http://xxlegend.com/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
      <category term="监听" scheme="http://xxlegend.com/tags/%E7%9B%91%E5%90%AC/"/>
    
  </entry>
  
  <entry>
    <title>Burpsuite 插件开发之RSA加解密</title>
    <link href="http://xxlegend.com/2016/02/01/Burpsuite%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B9%8BRSA%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    <id>http://xxlegend.com/2016/02/01/Burpsuite插件开发之RSA加解密/</id>
    <published>2016-02-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:39:44.925Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;burpsuit extention 插件 RSA encryption decryption&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;#1，简介&lt;/p&gt;
&lt;p&gt; burpsuit是一款非常好用的工具，目前我自己也是重度用户，所以就上手了burpsuit的插件接口开发，这篇文档主要记录了一
    
    </summary>
    
      <category term="Burp" scheme="http://xxlegend.com/categories/Burp/"/>
    
    
      <category term="burpsuite" scheme="http://xxlegend.com/tags/burpsuite/"/>
    
      <category term="extention" scheme="http://xxlegend.com/tags/extention/"/>
    
      <category term="插件" scheme="http://xxlegend.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="RSA" scheme="http://xxlegend.com/tags/RSA/"/>
    
      <category term="加解密" scheme="http://xxlegend.com/tags/%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    
      <category term="encryption" scheme="http://xxlegend.com/tags/encryption/"/>
    
      <category term="decryption" scheme="http://xxlegend.com/tags/decryption/"/>
    
  </entry>
  
  <entry>
    <title>Python eval的常见错误封装及利用原理</title>
    <link href="http://xxlegend.com/2015/07/31/Python%20eval%E7%9A%84%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E5%B0%81%E8%A3%85%E5%8F%8A%E5%88%A9%E7%94%A8%E5%8E%9F%E7%90%86/"/>
    <id>http://xxlegend.com/2015/07/31/Python eval的常见错误封装及利用原理/</id>
    <published>2015-07-31T07:39:38.000Z</published>
    <updated>2017-05-01T09:43:07.043Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在代码评审的过程，发现挺多错误使用eval导致代码注入的问题，比较典型的就是把eval当解析dict使用，有的就是简单的使用eval，有的就是错误的封装了eval，供全产品使用，这引出的问题更严重，这些都是血淋淋的教训，大家使用的时候多加注意。&lt;br&gt;下面列举一个实际产
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://xxlegend.com/tags/python/"/>
    
      <category term="eval" scheme="http://xxlegend.com/tags/eval/"/>
    
      <category term="sandbox escape" scheme="http://xxlegend.com/tags/sandbox-escape/"/>
    
      <category term="沙箱绕过" scheme="http://xxlegend.com/tags/%E6%B2%99%E7%AE%B1%E7%BB%95%E8%BF%87/"/>
    
  </entry>
  
  <entry>
    <title>Python安全编码&amp;代码审计</title>
    <link href="http://xxlegend.com/2015/07/30/Python%E5%AE%89%E5%85%A8%E7%BC%96%E7%A0%81&amp;%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    <id>http://xxlegend.com/2015/07/30/Python安全编码&amp;代码审计/</id>
    <published>2015-07-30T07:38:36.000Z</published>
    <updated>2017-05-01T09:43:42.716Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1 前言&quot;&gt;&lt;/a&gt;1 前言&lt;/h1&gt;&lt;p&gt;现在一般的web开发框架安全已经做的挺好的了，比如大家常用的django，但是一些不规范的开发方式还是会导致一些常用的安全问
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://xxlegend.com/tags/python/"/>
    
      <category term="安全编码" scheme="http://xxlegend.com/tags/%E5%AE%89%E5%85%A8%E7%BC%96%E7%A0%81/"/>
    
      <category term="代码审计" scheme="http://xxlegend.com/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="注入" scheme="http://xxlegend.com/tags/%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Django安全机制</title>
    <link href="http://xxlegend.com/2015/04/01/Django%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6/"/>
    <id>http://xxlegend.com/2015/04/01/Django安全机制/</id>
    <published>2015-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:36:29.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;#1 xss&lt;br&gt;django 已经能防范95%的xss问题，主要原理就是将&amp;lt;,&amp;gt;,&amp;amp;做了转化，但是如下情况还是无能为力&lt;br&gt;（1）属性有动态内容，正确：&lt;code&gt;&amp;lt;img alt=&amp;quot;{{good}}&amp;quot;&amp;gt;&lt;/code
    
    </summary>
    
      <category term="Django" scheme="http://xxlegend.com/categories/Django/"/>
    
    
      <category term="Django" scheme="http://xxlegend.com/tags/Django/"/>
    
      <category term="安全属性" scheme="http://xxlegend.com/tags/%E5%AE%89%E5%85%A8%E5%B1%9E%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>从Django的SECTET_KEY到代码执行</title>
    <link href="http://xxlegend.com/2015/04/01/%E4%BB%8EDjango%E7%9A%84SECTET_KEY%E5%88%B0%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    <id>http://xxlegend.com/2015/04/01/从Django的SECTET_KEY到代码执行/</id>
    <published>2015-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:44:07.582Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1 背景&quot;&gt;&lt;/a&gt;1 背景&lt;/h1&gt;&lt;p&gt;最近审查代码发现某些产品在登录的JS代码中泄露了SECRET_KEY,将该值作为密码加密的盐，这样就暴露了加密salt不太好
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="Django" scheme="http://xxlegend.com/tags/Django/"/>
    
      <category term="SECRET_KEY" scheme="http://xxlegend.com/tags/SECRET-KEY/"/>
    
      <category term="代码执行" scheme="http://xxlegend.com/tags/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>SVN和GIT信息泄漏利用原理及现状</title>
    <link href="http://xxlegend.com/2015/04/01/SVN%E5%92%8CGIT%E4%BF%A1%E6%81%AF%E6%B3%84%E6%BC%8F%E5%88%A9%E7%94%A8%E5%8E%9F%E7%90%86%E5%8F%8A%E7%8E%B0%E7%8A%B6/"/>
    <id>http://xxlegend.com/2015/04/01/SVN和GIT信息泄漏利用原理及现状/</id>
    <published>2015-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:43:59.382Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1，google-hack&quot;&gt;&lt;a href=&quot;#1，google-hack&quot; class=&quot;headerlink&quot; title=&quot;1，google hack&quot;&gt;&lt;/a&gt;1，google hack&lt;/h1&gt;&lt;p&gt;svn 搜索技巧&lt;br&gt;图1&lt;br&gt;git 搜索技巧
    
    </summary>
    
      <category term="信息泄露" scheme="http://xxlegend.com/categories/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
    
      <category term="SVN" scheme="http://xxlegend.com/tags/SVN/"/>
    
      <category term="GIT" scheme="http://xxlegend.com/tags/GIT/"/>
    
      <category term="信息泄露" scheme="http://xxlegend.com/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
      <category term="利用原理" scheme="http://xxlegend.com/tags/%E5%88%A9%E7%94%A8%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>REST API安全设计指南</title>
    <link href="http://xxlegend.com/2015/04/01/REST%20API%20%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/"/>
    <id>http://xxlegend.com/2015/04/01/REST API 安全设计指南/</id>
    <published>2015-04-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:36:16.965Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1，REST-API-简介&quot;&gt;&lt;a href=&quot;#1，REST-API-简介&quot; class=&quot;headerlink&quot; title=&quot;1，REST API 简介&quot;&gt;&lt;/a&gt;1，REST API 简介&lt;/h1&gt;&lt;p&gt;REST的全称是REpresentational S
    
    </summary>
    
      <category term="Python" scheme="http://xxlegend.com/categories/Python/"/>
    
    
      <category term="REST API" scheme="http://xxlegend.com/tags/REST-API/"/>
    
      <category term="安全设计指南" scheme="http://xxlegend.com/tags/%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/"/>
    
      <category term="API KEY" scheme="http://xxlegend.com/tags/API-KEY/"/>
    
      <category term="授权认证" scheme="http://xxlegend.com/tags/%E6%8E%88%E6%9D%83%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>从escapeshellcmd bypass说起到宽字节注入</title>
    <link href="http://xxlegend.com/2015/03/01/%E4%BB%8Eescapeshellcmd%20bypass%E8%AF%B4%E8%B5%B7%E5%88%B0%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    <id>http://xxlegend.com/2015/03/01/从escapeshellcmd bypass说起到宽字节注入/</id>
    <published>2015-03-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:44:19.514Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-php-多字节绕过escapeshellcmd&quot;&gt;&lt;a href=&quot;#1-php-多字节绕过escapeshellcmd&quot; class=&quot;headerlink&quot; title=&quot;1 php 多字节绕过escapeshellcmd&quot;&gt;&lt;/a&gt;1 php 多字节绕过
    
    </summary>
    
      <category term="mysql" scheme="http://xxlegend.com/categories/mysql/"/>
    
    
      <category term="从escapeshellcmd" scheme="http://xxlegend.com/tags/%E4%BB%8Eescapeshellcmd/"/>
    
      <category term="宽字节注入" scheme="http://xxlegend.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    
      <category term="mysql" scheme="http://xxlegend.com/tags/mysql/"/>
    
      <category term="bypass" scheme="http://xxlegend.com/tags/bypass/"/>
    
  </entry>
  
  <entry>
    <title>Php比较操作符带来的安全问题</title>
    <link href="http://xxlegend.com/2015/01/01/PHP%E6%AF%94%E8%BE%83%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://xxlegend.com/2015/01/01/PHP比较操作符带来的安全问题/</id>
    <published>2015-01-01T07:38:36.000Z</published>
    <updated>2017-05-01T09:41:17.100Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-比较操作符&quot;&gt;&lt;a href=&quot;#1-比较操作符&quot; class=&quot;headerlink&quot; title=&quot;1 比较操作符&quot;&gt;&lt;/a&gt;1 比较操作符&lt;/h1&gt;&lt;p&gt;php的比较操作符有==（等于）松散比较，===（完全等于）严格比较，这里面就会引入很多有意思的问题
    
    </summary>
    
      <category term="Php" scheme="http://xxlegend.com/categories/Php/"/>
    
    
      <category term="比较操作符" scheme="http://xxlegend.com/tags/%E6%AF%94%E8%BE%83%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    
      <category term="Comparison operators" scheme="http://xxlegend.com/tags/Comparison-operators/"/>
    
      <category term="安全问题" scheme="http://xxlegend.com/tags/%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
